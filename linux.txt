현재 작업중인 디렉터리 경로 표시 -> $pwd
디렉터리 생성 -> $mkdir 폴더이름
디렉터리 이동 -> cd // cd .. 시 상위 디렉터리로 이동
디렉터리 목록 -> $ls (파일과 디렉터리 구분이 안됨)
따라서 $ls -l 을 사용하면 구분하여 표시 (-l / -a 등을 넣을 수 있음 ==> 파라미터)
$ls -l 파일의 리스트를 자세히 보여주는 것 
(권한 부분에 d가 붙어있으면 디렉터리, 그렇지 않을 경우 파일)

명령어 뒤에 --help를 붙일 경우 명령어에 대한 설명이 출력됨
(ex. $mkdir --help)
man을 사용할 경우 전용페이지로 이동하여 명령어에 대한 해설을 보여줌
(ex. $man ls) Q를 누를경우 빠져나감

화면 초기화 -> $clear

리눅스/유닉스에서는 숨김파일 앞에 . 이 붙음(ls시 출력x)
그러나 $ls -a // $ls -all시 출력이 됨

내가 리스트와 감춰진 파일을 모두 보고싶다면
$ls -al 사용

cp cp.txt dir1/cp.txt 현재 디렉터리의 cp.txt 파일을 dir1/cp.txt에 복사한다.
mv 파일을 이동시킴
ex) mv 원본파일 이동시킬 위치 ==> mv mv.txt dir1/mv.txt

*** 중요
파일 이름을 변경할 때에도 mv명령어를 사용한다.
ex) touch rename.txt
mv rename.txt rename2.txt

** sudo(substitute user do) 다중 사용자 시스템 내에서 권한설정이 반드시 필요
해당 사용자가 어떤 명령어를 실행할 때 권한이 없어 실행할 수 없는 경우,
sudo를 명령에 앞에 사용하여 임시로 super유저의 권한을 획득하여 실행시키는 것

**nano 파일 에디터
^ == ctrl키

$nano -> 편집기로 이동
$nano 파일이름 -> 해당 파일의 편집기로 이동

텍스트에서 ctrl+6을 하면 windows의 쉬프트기능과 동일(텍스트 길이 선택가능)

**Package manager
-apt -> 앱스토어, 이클립스 마켓같은 것
-yum

$sudo apt-get update; --최신 상태의 소프트웨어 목록 다운로드
$sudo apt-cache search htop => htop과 관련있는 프로그램 목록 출력

$sudo apt-get install htop => htop 설치 // 설치할 것인지 물어볼 땐 y+enter
$sudo apt-get upgrade htop => 해당 프로그램을 최신버전으로 upgrade
(뒤에 프로그램명 없이 실행할 경우 설치한 모든 프로그램을 upgrade)

$sudo apt-get remove htop => 프로그램 삭제(Y-enter)

*** GUI  VS  CLI
후자의 경우 순차적으로 여러 명령어의 실행이 가능
ex) mkdir why;cd why ==> why디렉터리 생성 후 why로 현재디렉터리 변경

$cat 파일이름 =>  파일 내용을 화면에 출력
$grep 찾을 내용 파일이름 => 해당 파일에서 찾을 내용을 밑줄로 하여 내용 출력
ex) $grep linux linux.txt

$ls --help | grep sort => 파이프를 사용하여 help내용에서 sort가 들어간 내용만을 출력

$ls --help | grep sort | grep file 파이프를 이중으로 사용하여 내용 출력도 가능
(파이프를 사용하여 앞에 있는 내용의 출력을 뒤에 있는 내용의 입력으로 사용가능)

$ps aux 현재 실행중인 프로그램 리스트 출력
$ps aux | grep apache => apache가 들어간 프로그램 리스트만 출력

$git clone 'url' 사용 시 해당 소스코드의 주소값(url)에 해당하는 자료를
github로부터 복제해올 수 있음






